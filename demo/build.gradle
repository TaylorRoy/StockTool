plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id("com.github.node-gradle.node") version "3.0.1"
}

group = 'demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly 'mysql:mysql-connector-java'
}

node {
    version = '10.16.2'                                   // Version of node to use.
    distBaseUrl = 'https://nodejs.org/dist'               // Base URL for fetching node distributions (change if you have a mirror).
    download = true                                       // true will download node, false for globally installed node
  
    workDir = file("${project.buildDir}/nodejs")          // directory for unpacking node
    npmWorkDir = file("${project.buildDir}/npm")          // directory for NPM
    yarnWorkDir = file("${project.buildDir}/yarn")        // directory for Yarn
    nodeModulesDir = file("${project.projectDir}")        // directory where node_modules should be located
   
    // Node.js project directory location, where package.json file and node_modules directory are located
    nodeProjectDir = file("${project.projectDir}/src/main/myfrontend")
}

task bundle(type: NpmTask, dependsOn: npmInstall) {
    args = ['run', 'bundle']
}
 
assemble.dependsOn(bundle)

test {
	useJUnitPlatform()
}
